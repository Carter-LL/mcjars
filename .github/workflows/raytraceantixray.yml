name: RayTraceAntiXray

on:
  workflow_dispatch:
  schedule:
    - cron: "0 16 * * *"

jobs:
  build-default-branch:
    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
      - name: Set the git information
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - uses: actions/checkout@v4

      - name: JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'zulu'

      - name: Set timezone
        run: |
          sudo timedatectl set-timezone Asia/Shanghai

      - name: Clone RayTraceAntiXray repo
        run: |
          git clone https://github.com/stonar96/RayTraceAntiXray.git ~/RayTraceAntiXray

      - name: Build RayTraceAntiXray
        run: |
          cd ~/RayTraceAntiXray
          ./compile.sh
          continue-on-error: true

      # Get the date of the build
      - name: Get date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Get jar file name
        id: get_name
        run: echo "::set-output name=name::$(ls ~/RayTraceAntiXray/RayTraceAntiXray/target/ | grep spigot-mapped.jar)"

      # Create a release with the date as the title and tag
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.date.outputs.date }}
          release_name: ${{ steps.date.outputs.date }}
          draft: false
          prerelease: false

      # Upload the jar file to the release as an asset
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ~/RayTraceAntiXray/RayTraceAntiXray/target/${{ steps.get_name.outputs.name }}
          asset_name: ${{ steps.get_name.outputs.name }}
          asset_content_type: application/java-archive

      - name: Set upload_url
        id: set_upload_url
        uses: noobly314/share-data@v1
        with:
          share-id: release_url
          mode: set
          key: url
          value: ${{ steps.create_release.outputs.upload_url }}
    permissions:
      contents: write

  build-dev-branch:
    runs-on: ubuntu-latest
    needs: build-default-branch

    steps:
      - name: Set the git information
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - uses: actions/checkout@v4

      - name: JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'zulu'

      - name: Set timezone
        run: |
          sudo timedatectl set-timezone Asia/Shanghai

      - name: Clone RayTraceAntiXray repo
        run: |
          git clone https://github.com/stonar96/RayTraceAntiXray.git ~/RayTraceAntiXray

      - name: Get dev branch info
        id: dev1
        run: |
          cd ~/RayTraceAntiXray
          echo "::set-output name=dev1::$(git branch -a | grep dev | sed 's/^.................//' | sort -rV)"

      - name: Reclone dev branch to build
        run: |
          cd ~
          rm -rf RayTraceAntiXray
          git clone https://github.com/stonar96/RayTraceAntiXray -b ${{ steps.dev1.outputs.dev1 }}

      - name: Build RayTraceAntiXray
        run: |
          cd ~/RayTraceAntiXray
          ./gradlew build

      # Get the date of the build
      - name: Get date
        id: date1
        run: echo "::set-output name=date1::$(date +'%Y-%m-%d')"

      - name: Get jar file name
        id: get_name1
        run: echo "::set-output name=name1::$(ls ~/RayTraceAntiXray/build/libs/ | grep .jar)"

      - name: Get upload_url
        id: get_upload_url
        uses: noobly314/share-data@v1
        with:
          share-id: release_url
          mode: get
          key: url

      # Upload the jar file to the release as an asset
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_upload_url.outputs.data }}
          asset_path: ~/RayTraceAntiXray/build/libs/${{ steps.get_name1.outputs.name1 }}
          asset_name: ${{ steps.get_name1.outputs.name1 }}
          asset_content_type: application/java-archive
    permissions:
      contents: write
